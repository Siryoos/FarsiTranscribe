[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "farsitranscribe"
version = "2.0.0"
description = "A clean, efficient, and extensible audio transcription system optimized for Persian/Farsi language"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "FarsiTranscribe Team", email = "siryoosa@gmail.com"}
]
maintainers = [
    {name = "FarsiTranscribe Team", email = "siryoosa@gmail.com"}
]
keywords = ["transcription", "audio", "speech-to-text", "persian", "farsi", "whisper", "nlp", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Natural Language :: Persian",
]
requires-python = ">=3.8"
dependencies = [
    "openai-whisper>=20231117",
    "torch>=2.1.0",
    "torchaudio>=2.1.0",
    "torchvision>=0.16.0",
    "numpy>=1.24.0,<3.0",
    "transformers>=4.35.0",
    "huggingface-hub>=0.19.0",
    "requests>=2.28.0",
    "urllib3>=1.26.0",
    "pydub>=0.25.1",
    "ffmpeg-python>=0.2.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "scipy>=1.9.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "hazm>=0.7.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=24.2.6",
    "flake8-comprehensions>=3.14.0",
    "flake8-simplify>=0.21.0",
    "mypy>=1.0.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.8",
    "isort>=5.13.2",
    "pyupgrade>=3.15.1",
    "types-requests>=2.31.0",
    "types-setuptools>=69.0.0",
]

[project.scripts]
farsitranscribe = "src.core.cli:main"
farsi-transcribe = "src.core.cli:main"

[project.urls]
Homepage = "https://github.com/siryoos/FarsiTranscribe"
Documentation = "https://github.com/siryoos/FarsiTranscribe/wiki"
Repository = "https://github.com/siryoos/FarsiTranscribe"
"Bug Tracker" = "https://github.com/siryoos/FarsiTranscribe/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "farsi_transcribe*"]

[tool.setuptools]
py-modules = [
  "main",
  "install_pyannote",
  "cuda_diagnostics",
  "demo_transcription",
]

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--disable-warnings",
    "--cov=farsi_transcribe",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "whisper.*",
    "pydub.*",
    "transformers.*",
    "librosa.*",
    "hazm.*",
]
ignore_missing_imports = true 