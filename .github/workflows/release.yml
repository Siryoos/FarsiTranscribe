# name: Release

# on:
#   push:
#     tags:
#       - 'v*.*.*'
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Version to release (e.g., 1.2.3)'
#         required: true
#         type: string

# permissions:
#   contents: write
#   id-token: write

# jobs:
#   build:
#     name: Build Distribution
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
          
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'
          
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install build wheel twine
          
#       - name: Build wheels and source
#         run: python -m build
        
#       - name: Check distribution
#         run: twine check dist/*
        
#       - name: Upload artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist
#           path: dist/
          
#   release:
#     name: Create Release
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
          
#       - name: Download artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: dist
#           path: dist/
          
#       - name: Generate changelog
#         id: changelog
#         run: |
#           echo "# Release Notes" > RELEASE_NOTES.md
#           echo "" >> RELEASE_NOTES.md
          
#           # Get the previous tag
#           PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
#           if [ -n "$PREV_TAG" ]; then
#             echo "## Changes since $PREV_TAG" >> RELEASE_NOTES.md
#             echo "" >> RELEASE_NOTES.md
            
#             # Generate commit list
#             git log $PREV_TAG..HEAD --pretty=format:"- %s" >> RELEASE_NOTES.md
#           else
#             echo "## Initial Release" >> RELEASE_NOTES.md
#             echo "" >> RELEASE_NOTES.md
#             echo "First release of FarsiTranscribe!" >> RELEASE_NOTES.md
#           fi
          
#       - name: Create GitHub Release
#         uses: softprops/action-gh-release@v2
#         with:
#           body_path: RELEASE_NOTES.md
#           files: dist/*
#           draft: false
#           prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          
#   publish-pypi:
#     name: Publish to PyPI
#     needs: release
#     runs-on: ubuntu-latest
#     environment:
#       name: pypi
#       url: https://pypi.org/p/farsitranscribe
#     steps:
#       - name: Download artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: dist
#           path: dist/
          
#       - name: Publish to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           skip-existing: true
